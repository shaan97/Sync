.TH "shaan97::sync" 3 "Tue Jul 18 2017" "Version 1.0.0" "Sync" \" -*- nroff -*-
.ad l
.nh
.SH NAME
shaan97::sync \- The namespace for the sync project\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBClient\fP"
.br
.ti -1c
.RI "class \fBError\fP"
.br
.ti -1c
.RI "class \fBGroup\fP"
.br
.ti -1c
.RI "class \fBMember\fP"
.br
.RI "\fC\fBMember\fP\fPs are always members of a \fC\fBshaan97::sync::Group\fP\fP\&. They are the means of sending and receiving data from clients\&. "
.ti -1c
.RI "struct \fBMessage\fP"
.br
.ti -1c
.RI "class \fBServer\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef std::string \fBGROUP_ID\fP"
.br
.ti -1c
.RI "typedef std::string \fBMemberName\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBERROR_TYPE\fP { \fBNONE\fP = 0, \fBFAILED_CONNECTION\fP, \fBGID_EXISTS\fP, \fBGID_NO_EXIST\fP, \fBOTHER\fP, \fBACCESS_DENIED\fP, \fBCORRUPTED_DATA\fP, \fBMEMBER_EXISTS\fP, \fBMEMBER_NO_EXIST\fP }"
.br
.ti -1c
.RI "enum \fBMessageType\fP { \fBGROUP_JOIN\fP = 0, \fBGROUP_CREATE\fP, \fBHEARTBEAT\fP, \fBGROUP_EXIT\fP, \fBPROMOTE\fP, \fBERROR\fP }"
.br
.ti -1c
.RI "enum \fBJSON_KEY\fP { \fBTYPE\fP = 0, \fBMEMBER\fP, \fBGID\fP, \fBOTHER_MEM\fP, \fBNAME\fP, \fBERROR_MESSAGE\fP, \fBDETAILS\fP, \fBSYNC_ERROR\fP, \fBBOOST_ERROR\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &out, const \fBError\fP &e)"
.br
.ti -1c
.RI "void \fBto_json\fP (\fBnlohmann::json\fP &j, const \fBError\fP &e)"
.br
.ti -1c
.RI "void \fBfrom_json\fP (\fBnlohmann::json\fP &j, \fBError\fP &e)"
.br
.ti -1c
.RI "void \fBto_json\fP (\fBnlohmann::json\fP &j, const \fBMember\fP &m)"
.br
.ti -1c
.RI "void \fBfrom_json\fP (\fBnlohmann::json\fP &j, \fBMember\fP &m)"
.br
.ti -1c
.RI "void \fBto_json\fP (\fBnlohmann::json\fP &j, const \fBMessage\fP &m)"
.br
.RI "Converts a \fC\fBMessage\fP\fP into a \fC\fBnlohmann::json\fP object\fP "
.ti -1c
.RI "void \fBfrom_json\fP (\fBnlohmann::json\fP &j, \fBMessage\fP &m)"
.br
.RI "Converts a \fC\fBnlohmann::json\fP\fP into a \fC\fBMessage\fP\fP object\&. "
.in -1c
.SH "Detailed Description"
.PP 
The namespace for the sync project\&. 
.SH "Typedef Documentation"
.PP 
.SS "typedef std::string \fBshaan97::sync::GROUP_ID\fP"

.SS "typedef std::string \fBshaan97::sync::MemberName\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBshaan97::sync::ERROR_TYPE\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINONE \fP\fP
.TP
\fB\fIFAILED_CONNECTION \fP\fP
.TP
\fB\fIGID_EXISTS \fP\fP
.TP
\fB\fIGID_NO_EXIST \fP\fP
.TP
\fB\fIOTHER \fP\fP
.TP
\fB\fIACCESS_DENIED \fP\fP
.TP
\fB\fICORRUPTED_DATA \fP\fP
.TP
\fB\fIMEMBER_EXISTS \fP\fP
.TP
\fB\fIMEMBER_NO_EXIST \fP\fP
.SS "enum \fBshaan97::sync::JSON_KEY\fP"
All possible JSON Key Types for our defined API 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITYPE \fP\fP
.TP
\fB\fIMEMBER \fP\fP
.TP
\fB\fIGID \fP\fP
.TP
\fB\fIOTHER_MEM \fP\fP
.TP
\fB\fINAME \fP\fP
.TP
\fB\fIERROR_MESSAGE \fP\fP
.TP
\fB\fIDETAILS \fP\fP
.TP
\fB\fISYNC_ERROR \fP\fP
.TP
\fB\fIBOOST_ERROR \fP\fP
.SS "enum \fBshaan97::sync::MessageType\fP"
This denotes what the purpose of this message is\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIGROUP_JOIN \fP\fP
.TP
\fB\fIGROUP_CREATE \fP\fP
.TP
\fB\fIHEARTBEAT \fP\fP
.TP
\fB\fIGROUP_EXIT \fP\fP
.TP
\fB\fIPROMOTE \fP\fP
.TP
\fB\fIERROR \fP\fP
.SH "Function Documentation"
.PP 
.SS "void shaan97::sync::from_json (\fBnlohmann::json\fP & j, \fBError\fP & e)"
Converts from \fC\fBnlohmann::json\fP\fP to a \fC\fBError\fP\fP object 
.SS "std::ostream & shaan97::sync::operator<< (std::ostream & out, const \fBError\fP & e)"

.SS "void shaan97::sync::to_json (\fBnlohmann::json\fP & j, const \fBError\fP & e)"
Converts from \fC\fBError\fP\fP to a \fC\fBnlohmann::json\fP\fP object 
.SH "Author"
.PP 
Generated automatically by Doxygen for Sync from the source code\&.
